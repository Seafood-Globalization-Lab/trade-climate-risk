map_data("../data/shapefiles/TM_WORLD_BORDERS_SIMPL-0.3.shp")
knitr::opts_chunk$set(echo = TRUE)
# General data cleaning + visualization + analysis packages
library(tidyverse)
library(ggformula)
library(countrycode)
library(data.table)
library(arrow)
# For creating map visualizations + spatial analysis
library(sf)
# Load in packages needed for ARTIS
library(devtools)
library(tidytext)
devtools::install_github("davidsjoberg/ggsankey")
library(ggsankey)
devtools::install_github("Seafood-Globalization-Lab/exploreARTIS@v1.0.0", dependencies = TRUE)
library(exploreARTIS)
# For Packages for fishbase
remotes::install_github("cboettig/duckdbfs", force = TRUE)
remotes::install_github("ropensci/rfishbase")
library(duckdbfs)
library(rfishbase)
merged_presence_absence_data
# Double check that all NA values occuring in species are because they are not located in either fishbase or sealifebase 44 rows is correct!
merged_presence_absence_data %>%
filter(str_detect(sciname_joinable_to_fishbase, " ") & is.na(presence_or_absence)) %>%
distinct(sciname_joinable_to_fishbase) %>%
summarize(length = n()) %>%
pull(length)
# Number of excluded rows for *species* that weren't matched 13809 rows
merged_presence_absence_data %>%
filter(str_detect(sciname_joinable_to_fishbase, " ") & is.na(presence_or_absence)) %>%
summarize(length = n()) %>%
pull(length)
# See how many 0/1/NA there are in presences
merged_presence_absence_data %>%
count(presence_or_absence)
eez_assignments
# Number of unique country combinations
length(unique(eez_assignments$eez_name))
# Country coverage using FAO distribution data: 154 countries (less than when using country() data.
length(unique(unlist(country_list)))
# Combine fishbase fishbase location data with their respective countries they're found in
artis_fishbase_locations_faoareas <- cbind(artis_fishbase_locations, eez_assignments)
# Number of species covered in fishbase via faoareas() - 782 species
length(unique(artis_fishbase_locations_faoareas[!is.na(artis_fishbase_locations_faoareas$eez_name),]$Species))
artis_fishbase_locations_faoareas
artis_fishbae_locations %>%
select(eez_name, Species) %>%
rename(sciname_joinable_to_fishbase = "Species")
artis_fishbase_locations_faoareas %>%
select(eez_name, Species) %>%
rename(sciname_joinable_to_fishbase = "Species")
artis_fishbase_locations_faoareas
artis_fishbase_locations_faoareas %>%
select(eez_name, Species)
artis_fishbase_locations_faoareas %>%
select(c(eez_name, Species)) %>%
rename(sciname_joinable_to_fishbase = "Species")
artis_fishbase_locations_faoareas %>%
select(eez_name, Species) %>%
rename(sciname_joinable_to_fishbase = "Species")
# Unique entries in Fishbase (i.e., # of ARTIS species successfully joined to fishbase - 1382 species)
artis_fishbase_locations <- faoareas(species_list = c(unique(consumption_sciname$sciname_joinable_to_fishbase)), server = "fishbase")
# Get unique taxonomic entries (no repeats)
unique_taxonomy_entries <- taxa_level_vars(consumption_sciname, ungroup = TRUE)
# Determines whether something is reported to **at least** a given taxonomic level
unique_taxonomy_entries <- at_least_vars(unique_taxonomy_entries)
# Add in species binary Yes or no
unique_taxonomy_entries <- unique_taxonomy_entries %>%
mutate(at_least_species = case_when(taxa_level == "species" ~ 1, TRUE ~ 0)) %>%
relocate(at_least_species, .before = at_least_genus)
# Count taxonomic totals
taxa_unreported_props <- data.frame()
taxa_unreported_quantity <- data.frame()
for (i in levels) {
amount <- unique_taxonomy_entries %>%
ungroup() %>%
summarize(sum = sum(!(!!sym(paste0("at_least_",i))))) %>%
pull(sum)
total <- length(unique_taxonomy_entries$sciname)
prop <- amount / total
taxa_unreported_props <- rbind(taxa_unreported_props, list(i, round(prop, 2)))
taxa_unreported_quantity <- rbind(taxa_unreported_quantity, list(i, total))
}
# Rename taxa_total variables
taxa_unreported_props <- taxa_unreported_props %>%
rename(taxa_level = "X.species.", prop = "X0.2")
taxa_unreported_quantity <- taxa_unreported_quantity %>%
rename(taxa_level = "X.species.", prop = "X2232L")
# Reports proportion and quantities that are not reported to a given taxonomic level.
print(taxa_unreported_props)
print(taxa_unreported_quantity)
# View joined artis / fishbase database
View(artis_fishbase_locations)
# Identify what eez species distrubutions are in (with faoareas)
eez_assignments <- data.frame(eez_name = 1:nrow(artis_fishbase_locations))
# Initialize list
country_list <- list()
# Set length of list
length(country_list) <- nrow(artis_fishbase_locations)
# METHOD 1: rfishbase::faoareas()
# Assign a country into the present countries if a species distribution intersects with a country's EEZ
for (i in 1:nrow(artis_fishbase_locations)) {
for (j in 1:nrow(eez_extents)) {
lat_check <- (abs(artis_fishbase_locations$SouthernLatitude[i]) <= abs(eez_extents$y_max[j])) &
(abs(artis_fishbase_locations$NorthernLatitude[i]) >= abs(eez_extents$y_min[j]))
long_check <- (abs(artis_fishbase_locations$WesternLongitude[i]) <= abs(eez_extents$x_max[j])) &
(abs(artis_fishbase_locations$EasternLongitude[i]) >= abs(eez_extents$x_min[j]))
if (lat_check & long_check) {
country_list[[i]] <- c(country_list[[i]], eez_extents$ISO_TER1[j])
}
if (j == nrow(eez_extents)) {
if (is.null(country_list[[i]])) {
country_list[[i]] <- NA
eez_assignments$eez_name[i] = country_list[[i]]
}
else {
eez_assignments$eez_name[i] = paste0(c(country_list[[i]]), collapse = " ")
}
}
}
}
# Number of unique country combinations
length(unique(eez_assignments$eez_name))
# Number of N/S/E/W combinations (make sure it roughly matches with number of unique combinations.)
artis_fishbase_locations %>%
distinct(NorthernLatitude, SouthernLatitude, EasternLongitude, EasternLongitude, WesternLongitude)
# Country coverage using FAO distribution data: 154 countries (less than when using country() data.
length(unique(unlist(country_list)))
# Combine fishbase fishbase location data with their respective countries they're found in
artis_fishbase_locations_faoareas <- cbind(artis_fishbase_locations, eez_assignments)
# Number of species covered in fishbase via faoareas() - 782 species
length(unique(artis_fishbase_locations_faoareas[!is.na(artis_fishbase_locations_faoareas$eez_name),]$Species))
artis_fishbase_locations_faoareas %>%
select(eez_name, Species) %>%
rename(sciname_joinable_to_fishbase = "Species")
artis_fishbase_locations_faoareas %>%
select(eez_name, Species) %>%
rename(sciname_joinable_to_fishbase = "Species", countries_found = "eez_name")
artis_fishbase_locations_faoareas <- artis_fishbase_locations_faoareas %>%
select(eez_name, Species) %>%
rename(sciname_joinable_to_fishbase = "Species", countries_found = "eez_name")
left_join(consumption_sciname, fishbase_country_presences, by = "sciname_joinable_to_fishbase")
left_join(consumption_sciname, artis_fishbase_locations_faoareas, by = "sciname_joinable_to_fishbase")
consumption_countries_joined_faoareas <- left_join(consumption_sciname, artis_fishbase_locations_faoareas, by = "sciname_joinable_to_fishbase")
consumption_countries_joined_faoareas %>%
ungroup() %>%
mutate(presence_or_absence = case_when(
str_detect(countries_found, eez_iso3c) ~ 1,!str_detect(countries_found, eez_iso3c) ~ 0,
TRUE ~ NA
))
#
# Determine whether a species is present or absent in an EEZ
consumption_countries_joined_faoareas <- consumption_countries_joined_faoareas %>%
ungroup() %>%
mutate(presence_or_absence = case_when(
str_detect(countries_found, eez_iso3c) ~ 1,!str_detect(countries_found, eez_iso3c) ~ 0,
TRUE ~ NA
))
consumption_countries_joined_faoareas %>%
count(presence_or_absence)
consumption_countries_joined_faoareas %>%
count(presence_or_absence) %>%
summarize(sum = sum(n)) %>%
pull(sum)
consumption_countries_joined_faoareas %>%
count(presence_or_absence) %>%
summarize(summ = sum(n)) %>%
pull(summ)
consumption_countries_joined_faoareas %>%
count(presence_or_absence)
consumption_countries_joined_faoareas
consumption_sciname
artis_fishbase_locations_faoareas
artis_fishbase_locations_faoareas %>%
group_by(countries_found) %>%
distinct(sciname_joinable_to_fishbase)
artis_fishbase_locations_faoareas
artis_fishbase_locations_faoareas <- artis_fishbase_locations_faoareas %>%
group_by(countries_found) %>%
distinct(sciname_joinable_to_fishbase)
consumption_countries_joined_faoareas <- left_join(consumption_sciname, artis_fishbase_locations_faoareas, by = "sciname_joinable_to_fishbase")
consumption_countries_joined_faoareas
artis_fishbase_locations_faoareas
artis_fishbase_locations_faoareas %>%
group_by(sciname_joinable_to_fishbase) %>%
distinct(sciname_joinable_to_fishbase)
artis_fishbase_locations_faoareas <- artis_fishbase_locations_faoareas %>%
group_by(sciname_joinable_to_fishbase) %>%
distinct(countries_found)
artis_fishbase_locations_faoareas
artis_fishbase_locations_faoareas %>%
group_by(sciname_joinable_to_fishbase, countries_found) %>%
distinct(countries_found)
artis_fishbase_locations_faoareas %>%
group_by(sciname_joinable_to_fishbase, countries_found) %>%
distinct(countries_found)
artis_fishbase_locations_faoareas %>%
group_by(sciname_joinable_to_fishbase, countries_found) %>%
distinct(sciname_joinable_to_fishbase)
artis_fishbase_locations_faoareas %>%
group_by(sciname_joinable_to_fishbase, countries_found) %>%
distinct(sciname_joinable_to_fishbase, countries_found)
artis_fishbase_locations_faoareas %>%
distinct(sciname_joinable_to_fishbase)
artis_fishbase_locations_faoareas %>%
filter(distinct(sciname_joinable_to_fishbase))
artis_fishbase_locations_faoareas %>%
distinct(sciname_joinable_to_fishbase, .keep_all = TRUE)
artis_fishbase_locations_faoareas <- artis_fishbase_locations_faoareas %>%
distinct(sciname_joinable_to_fishbase, .keep_all = TRUE)
consumption_countries_joined_faoareas <- left_join(consumption_sciname, artis_fishbase_locations_faoareas, by = "sciname_joinable_to_fishbase")
consumption_countries_joined_faoareas
#
# Determine whether a species is present or absent in an EEZ
consumption_countries_joined_faoareas <- consumption_countries_joined_faoareas %>%
ungroup() %>%
mutate(presence_or_absence = case_when(
str_detect(countries_found, eez_iso3c) ~ 1,!str_detect(countries_found, eez_iso3c) ~ 0,
TRUE ~ NA
))
consumption_countries_joined_faoareas
consumption_countries_joined_faoareas %>%
count(presence_or_absence) %>%
summarize(summ = sum(n)) %>%
pull(summ)
consumption_countries_joined_faoareas %>%
count(presence_or_absence) %>%
summarize(sum = sum(n)) %>%
pull(sum)
consumption_countries_joined_faoareas %>%
count(presence_or_absence)
taxa_presence_or_absence_country <- function(data = "fishbase", obtain_stats = FALSE) {
artis_fishbase_locations <- country(species_list = c(unique(consumption_sciname$sciname_joinable_to_fishbase)), server = data)
# Identify what eez species distrubutions are in (with faoareas)
eez_assignments <- data.frame(eez_name = 1:nrow(artis_fishbase_locations))
# Initialize list
country_list <- list()
# Set length of list
length(country_list) <- nrow(artis_fishbase_locations)
# METHOD 1: rfishbase::faoareas()
# Assign a country into the present countries if a species distribution intersects with a country's EEZ
for (i in 1:nrow(artis_fishbase_locations)) {
for (j in 1:nrow(eez_extents)) {
lat_check <- (abs(artis_fishbase_locations$SouthernLatitude[i]) <= abs(eez_extents$y_max[j])) &
(abs(artis_fishbase_locations$NorthernLatitude[i]) >= abs(eez_extents$y_min[j]))
long_check <- (abs(artis_fishbase_locations$WesternLongitude[i]) <= abs(eez_extents$x_max[j])) &
(abs(artis_fishbase_locations$EasternLongitude[i]) >= abs(eez_extents$x_min[j]))
if (lat_check & long_check) {
country_list[[i]] <- c(country_list[[i]], eez_extents$ISO_TER1[j])
}
if (j == nrow(eez_extents)) {
if (is.null(country_list[[i]])) {
country_list[[i]] <- NA
eez_assignments$eez_name[i] = country_list[[i]]
}
else {
eez_assignments$eez_name[i] = paste0(c(country_list[[i]]), collapse = " ")
}
}
}
}
# Number of unique country combinations
length(unique(eez_assignments$eez_name))
# Number of N/S/E/W combinations (make sure it roughly matches with number of unique combinations.)
artis_fishbase_locations %>%
distinct(
NorthernLatitude,
SouthernLatitude,
EasternLongitude,
EasternLongitude,
WesternLongitude
)
# Country coverage using FAO distribution data: 154 countries (less than when using country() data.
length(unique(unlist(country_list)))
# Combine fishbase fishbase location data with their respective countries they're found in
artis_fishbase_locations_faoareas <- cbind(artis_fishbase_locations, eez_assignments)
# Number of species covered in fishbase via faoareas() - 782 species
length(unique(artis_fishbase_locations_faoareas[!is.na(artis_fishbase_locations_faoareas$eez_name), ]$Species))
artis_fishbase_locations_faoareas <- artis_fishbase_locations_faoareas %>%
select(eez_name, Species) %>%
rename(sciname_joinable_to_fishbase = "Species",
countries_found = "eez_name")
artis_fishbase_locations_faoareas <- artis_fishbase_locations_faoareas %>%
distinct(sciname_joinable_to_fishbase, .keep_all = TRUE)
consumption_countries_joined_faoareas <- left_join(consumption_sciname,
artis_fishbase_locations_faoareas,
by = "sciname_joinable_to_fishbase")
#
# Determine whether a species is present or absent in an EEZ
consumption_countries_joined_faoareas <- consumption_countries_joined_faoareas %>%
ungroup() %>%
mutate(presence_or_absence = case_when(
str_detect(countries_found, eez_iso3c) ~ 1,
!str_detect(countries_found, eez_iso3c) ~ 0,
TRUE ~ NA
))
}
taxa_presence_or_absence_country <- function(data = "fishbase", obtain_stats = FALSE) {
artis_fishbase_locations <- country(species_list = c(unique(consumption_sciname$sciname_joinable_to_fishbase)), server = data)
# Identify what eez species distrubutions are in (with faoareas)
eez_assignments <- data.frame(eez_name = 1:nrow(artis_fishbase_locations))
# Initialize list
country_list <- list()
# Set length of list
length(country_list) <- nrow(artis_fishbase_locations)
# METHOD 1: rfishbase::faoareas()
# Assign a country into the present countries if a species distribution intersects with a country's EEZ
for (i in 1:nrow(artis_fishbase_locations)) {
for (j in 1:nrow(eez_extents)) {
lat_check <- (abs(artis_fishbase_locations$SouthernLatitude[i]) <= abs(eez_extents$y_max[j])) &
(abs(artis_fishbase_locations$NorthernLatitude[i]) >= abs(eez_extents$y_min[j]))
long_check <- (abs(artis_fishbase_locations$WesternLongitude[i]) <= abs(eez_extents$x_max[j])) &
(abs(artis_fishbase_locations$EasternLongitude[i]) >= abs(eez_extents$x_min[j]))
if (lat_check & long_check) {
country_list[[i]] <- c(country_list[[i]], eez_extents$ISO_TER1[j])
}
if (j == nrow(eez_extents)) {
if (is.null(country_list[[i]])) {
country_list[[i]] <- NA
eez_assignments$eez_name[i] = country_list[[i]]
}
else {
eez_assignments$eez_name[i] = paste0(c(country_list[[i]]), collapse = " ")
}
}
}
}
# Number of unique country combinations
length(unique(eez_assignments$eez_name))
# Number of N/S/E/W combinations (make sure it roughly matches with number of unique combinations.)
artis_fishbase_locations %>%
distinct(
NorthernLatitude,
SouthernLatitude,
EasternLongitude,
EasternLongitude,
WesternLongitude
)
# Country coverage using FAO distribution data: 154 countries (less than when using country() data.
length(unique(unlist(country_list)))
# Combine fishbase fishbase location data with their respective countries they're found in
artis_fishbase_locations_faoareas <- cbind(artis_fishbase_locations, eez_assignments)
# Number of species covered in fishbase via faoareas() - 782 species
length(unique(artis_fishbase_locations_faoareas[!is.na(artis_fishbase_locations_faoareas$eez_name), ]$Species))
artis_fishbase_locations_faoareas <- artis_fishbase_locations_faoareas %>%
select(eez_name, Species) %>%
rename(sciname_joinable_to_fishbase = "Species",
countries_found = "eez_name")
artis_fishbase_locations_faoareas <- artis_fishbase_locations_faoareas %>%
distinct(sciname_joinable_to_fishbase, .keep_all = TRUE)
consumption_countries_joined_faoareas <- left_join(consumption_sciname,
artis_fishbase_locations_faoareas,
by = "sciname_joinable_to_fishbase")
#
# Determine whether a species is present or absent in an EEZ
consumption_countries_joined_faoareas <- consumption_countries_joined_faoareas %>%
ungroup() %>%
mutate(presence_or_absence = case_when(
str_detect(countries_found, eez_iso3c) ~ 1,
!str_detect(countries_found, eez_iso3c) ~ 0,
TRUE ~ NA
))
return(consumption_countries_joined_faoareas)
}
fishbase_presences_faoareas <- taxa_presence_or_absence_country(data = "fishase")
# METHOD 1: rfishbase::faoareas()
fishbase_presences_faoareas <- taxa_presence_or_absence_country(data = "fishbase")
artis_fishbase_locations
taxa_presence_or_absence_country <- function(data = "fishbase", obtain_stats = FALSE) {
artis_fishbase_locations <- faoareas(species_list = c(unique(consumption_sciname$sciname_joinable_to_fishbase)), server = data)
# Identify what eez species distrubutions are in (with faoareas)
eez_assignments <- data.frame(eez_name = 1:nrow(artis_fishbase_locations))
# Initialize list
country_list <- list()
# Set length of list
length(country_list) <- nrow(artis_fishbase_locations)
# METHOD 1: rfishbase::faoareas()
# Assign a country into the present countries if a species distribution intersects with a country's EEZ
for (i in 1:nrow(artis_fishbase_locations)) {
for (j in 1:nrow(eez_extents)) {
lat_check <- (abs(artis_fishbase_locations$SouthernLatitude[i]) <= abs(eez_extents$y_max[j])) &
(abs(artis_fishbase_locations$NorthernLatitude[i]) >= abs(eez_extents$y_min[j]))
long_check <- (abs(artis_fishbase_locations$WesternLongitude[i]) <= abs(eez_extents$x_max[j])) &
(abs(artis_fishbase_locations$EasternLongitude[i]) >= abs(eez_extents$x_min[j]))
if (lat_check & long_check) {
country_list[[i]] <- c(country_list[[i]], eez_extents$ISO_TER1[j])
}
if (j == nrow(eez_extents)) {
if (is.null(country_list[[i]])) {
country_list[[i]] <- NA
eez_assignments$eez_name[i] = country_list[[i]]
}
else {
eez_assignments$eez_name[i] = paste0(c(country_list[[i]]), collapse = " ")
}
}
}
}
# Number of unique country combinations
length(unique(eez_assignments$eez_name))
# Number of N/S/E/W combinations (make sure it roughly matches with number of unique combinations.)
artis_fishbase_locations %>%
distinct(
NorthernLatitude,
SouthernLatitude,
EasternLongitude,
EasternLongitude,
WesternLongitude
)
# Country coverage using FAO distribution data: 154 countries (less than when using country() data.
length(unique(unlist(country_list)))
# Combine fishbase fishbase location data with their respective countries they're found in
artis_fishbase_locations_faoareas <- cbind(artis_fishbase_locations, eez_assignments)
# Number of species covered in fishbase via faoareas() - 782 species
length(unique(artis_fishbase_locations_faoareas[!is.na(artis_fishbase_locations_faoareas$eez_name), ]$Species))
artis_fishbase_locations_faoareas <- artis_fishbase_locations_faoareas %>%
select(eez_name, Species) %>%
rename(sciname_joinable_to_fishbase = "Species",
countries_found = "eez_name")
artis_fishbase_locations_faoareas <- artis_fishbase_locations_faoareas %>%
distinct(sciname_joinable_to_fishbase, .keep_all = TRUE)
consumption_countries_joined_faoareas <- left_join(consumption_sciname,
artis_fishbase_locations_faoareas,
by = "sciname_joinable_to_fishbase")
#
# Determine whether a species is present or absent in an EEZ
consumption_countries_joined_faoareas <- consumption_countries_joined_faoareas %>%
ungroup() %>%
mutate(presence_or_absence = case_when(
str_detect(countries_found, eez_iso3c) ~ 1,
!str_detect(countries_found, eez_iso3c) ~ 0,
TRUE ~ NA
))
return(consumption_countries_joined_faoareas)
}
# METHOD 1: FAOAREAS
taxa_presence_or_absence_country <- function(data = "fishbase", obtain_stats = FALSE) {
artis_fishbase_locations <- faoareas(species_list = c(unique(consumption_sciname$sciname_joinable_to_fishbase)), server = data)
# Identify what eez species distrubutions are in (with faoareas)
eez_assignments <- data.frame(eez_name = 1:nrow(artis_fishbase_locations))
# Initialize list
country_list <- list()
# Set length of list
length(country_list) <- nrow(artis_fishbase_locations)
# METHOD 1: rfishbase::faoareas()
# Assign a country into the present countries if a species distribution intersects with a country's EEZ
for (i in 1:nrow(artis_fishbase_locations)) {
for (j in 1:nrow(eez_extents)) {
lat_check <- (abs(artis_fishbase_locations$SouthernLatitude[i]) <= abs(eez_extents$y_max[j])) &
(abs(artis_fishbase_locations$NorthernLatitude[i]) >= abs(eez_extents$y_min[j]))
long_check <- (abs(artis_fishbase_locations$WesternLongitude[i]) <= abs(eez_extents$x_max[j])) &
(abs(artis_fishbase_locations$EasternLongitude[i]) >= abs(eez_extents$x_min[j]))
if (lat_check & long_check) {
country_list[[i]] <- c(country_list[[i]], eez_extents$ISO_TER1[j])
}
if (j == nrow(eez_extents)) {
if (is.null(country_list[[i]])) {
country_list[[i]] <- NA
eez_assignments$eez_name[i] = country_list[[i]]
}
else {
eez_assignments$eez_name[i] = paste0(c(country_list[[i]]), collapse = " ")
}
}
}
}
# Number of unique country combinations
length(unique(eez_assignments$eez_name))
# Number of N/S/E/W combinations (make sure it roughly matches with number of unique combinations.)
artis_fishbase_locations %>%
distinct(
NorthernLatitude,
SouthernLatitude,
EasternLongitude,
EasternLongitude,
WesternLongitude
)
# Country coverage using FAO distribution data: 154 countries (less than when using country() data.
length(unique(unlist(country_list)))
# Combine fishbase fishbase location data with their respective countries they're found in
artis_fishbase_locations_faoareas <- cbind(artis_fishbase_locations, eez_assignments)
# Number of species covered in fishbase via faoareas() - 782 species
length(unique(artis_fishbase_locations_faoareas[!is.na(artis_fishbase_locations_faoareas$eez_name), ]$Species))
artis_fishbase_locations_faoareas <- artis_fishbase_locations_faoareas %>%
select(eez_name, Species) %>%
rename(sciname_joinable_to_fishbase = "Species",
countries_found = "eez_name")
artis_fishbase_locations_faoareas <- artis_fishbase_locations_faoareas %>%
distinct(sciname_joinable_to_fishbase, .keep_all = TRUE)
consumption_countries_joined_faoareas <- left_join(consumption_sciname,
artis_fishbase_locations_faoareas,
by = "sciname_joinable_to_fishbase")
#
# Determine whether a species is present or absent in an EEZ
consumption_countries_joined_faoareas <- consumption_countries_joined_faoareas %>%
ungroup() %>%
mutate(presence_or_absence = case_when(
str_detect(countries_found, eez_iso3c) ~ 1,
!str_detect(countries_found, eez_iso3c) ~ 0,
TRUE ~ NA
))
return(consumption_countries_joined_faoareas)
# METHOD 1: rfishbase::faoareas()
fishbase_presences_faoareas <- taxa_presence_or_absence_country(data = "fishbase")
sealifebase_presences_faoareas <- taxa_presence_or_absence_country(data = "sealifebase")
fishbase_presences_faoareas
4*4
4*4
4
4
